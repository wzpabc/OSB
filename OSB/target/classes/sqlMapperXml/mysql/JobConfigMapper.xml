<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tup.mapper.JobConfigMapper" >
  <resultMap id="BaseResultMap" type="com.tup.model.JobConfig" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="config_code" property="configCode" jdbcType="VARCHAR" />
    <result column="config_name" property="configName" jdbcType="VARCHAR" />
    <result column="freq" property="freq" jdbcType="INTEGER" />
    <result column="retry_time" property="retryTime" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="config_status" property="configStatus" jdbcType="CHAR" />
    <result column="ktr_name" property="ktrName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="run_status" property="runStatus" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, config_code, config_name, freq, retry_time, email, config_status, ktr_name, remark, 
    create_time, update_time, run_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tup.model.JobConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from job_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     <if test="offset != null  and rows != null " >
    limit ${offset},${rows}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tup.model.JobConfigExample" >
    delete from job_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tup.model.JobConfig" >
    insert into job_config (id, config_code, config_name, 
      freq, retry_time, email, 
      config_status, ktr_name, remark, 
      create_time, update_time, run_status
      )
    values (#{id,jdbcType=INTEGER}, #{configCode,jdbcType=VARCHAR}, #{configName,jdbcType=VARCHAR}, 
      #{freq,jdbcType=INTEGER}, #{retryTime,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{configStatus,jdbcType=CHAR}, #{ktrName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{runStatus,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tup.model.JobConfig" >
    insert into job_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="configCode != null" >
        config_code,
      </if>
      <if test="configName != null" >
        config_name,
      </if>
      <if test="freq != null" >
        freq,
      </if>
      <if test="retryTime != null" >
        retry_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="configStatus != null" >
        config_status,
      </if>
      <if test="ktrName != null" >
        ktr_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="runStatus != null" >
        run_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configCode != null" >
        #{configCode,jdbcType=VARCHAR},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="freq != null" >
        #{freq,jdbcType=INTEGER},
      </if>
      <if test="retryTime != null" >
        #{retryTime,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null" >
        #{configStatus,jdbcType=CHAR},
      </if>
      <if test="ktrName != null" >
        #{ktrName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runStatus != null" >
        #{runStatus,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tup.model.JobConfigExample" resultType="java.lang.Integer" >
    select count(*) from job_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configCode != null" >
        config_code = #{record.configCode,jdbcType=VARCHAR},
      </if>
      <if test="record.configName != null" >
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.freq != null" >
        freq = #{record.freq,jdbcType=INTEGER},
      </if>
      <if test="record.retryTime != null" >
        retry_time = #{record.retryTime,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.configStatus != null" >
        config_status = #{record.configStatus,jdbcType=CHAR},
      </if>
      <if test="record.ktrName != null" >
        ktr_name = #{record.ktrName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.runStatus != null" >
        run_status = #{record.runStatus,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job_config
    set id = #{record.id,jdbcType=INTEGER},
      config_code = #{record.configCode,jdbcType=VARCHAR},
      config_name = #{record.configName,jdbcType=VARCHAR},
      freq = #{record.freq,jdbcType=INTEGER},
      retry_time = #{record.retryTime,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      config_status = #{record.configStatus,jdbcType=CHAR},
      ktr_name = #{record.ktrName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      run_status = #{record.runStatus,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>